name: RELEASE

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]


#setup environment variable
env:
  REGISTRY: ghcr.io
  SIGNALLING_IMAGE_NAME:  ${{ secrets.DOCKER_USERNAME }}/signalling:release_latest
  SLAVEMANAGER_IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/slavemanager:release_latest
  CONDUCTOR_IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/conductor:release_latest

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
      
    # create temporary signalling dockerfile then build&push in host context
    - name: Signalling
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: Host  
        target: release
        file: Host/Signalling/Dockerfile
        push: true
        tags: ${{ env.SIGNALLING_IMAGE_NAME }}

    # Create temporary slavemanager dockerfile then build&push in host context
    - name: SlaveManager
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: Host  
        target: release
        file: Host/SlaveManager/Dockerfile
        push: true
        tags: ${{ env.SLAVEMANAGER_IMAGE_NAME }}

    # Create temporary conductor dockerfile then build&push in host context
    - name: Conductor
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: Host 
        target: release
        file: Host/Conductor/Dockerfile
        push: true
        tags: ${{ env.CONDUCTOR_IMAGE_NAME }}

  deployment:
    runs-on: ubuntu-latest
    steps:
    - name: Deploy on kubernetes
      uses: appleboy/ssh-action@master
      with:
        username:  ${{ secrets.HOST_USERNAME }}
        host: ${{ secrets.HOST_IP }}
        password: ${{ secrets.HOST_PASSWORD }}
        script: |
          cd /personal-cloud-computing
          git checkout master
          git pull https://${{ secrets.OAUTH_TOKEN }}@github.com/pigeatgarlic/personal-cloud-computing.git master
          docker login --username ${{ secrets.DOCKER_USERNAME }} --password ${{ secrets.DOCKER_PASSWORD }}
          cd Deployment/kubernetes
          kubectl apply -f ingress/ingress.yaml
          kubectl apply -f configmap/dbconfig.yaml
          kubectl apply -f volume/volume.yaml
          kubectl apply -f deployment/conductor.yaml
          kubectl apply -f deployment/coturn.yaml
          kubectl apply -f deployment/resources.yaml
          kubectl apply -f deployment/signalling.yaml
          kubectl apply -f deployment/slavemanager.yaml








