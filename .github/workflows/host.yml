name: HOST

on:
  push:
    branches: [ master ]
    paths: 
    - 'Host/**'
  pull_request:
    branches: [ master ]
    paths: 
    - 'Host/**'
  workflow_dispatch:


#setup environment variable
env:
  REGISTRY: ghcr.io
  SIGNALLING_IMAGE_NAME:  ${{ secrets.DOCKER_USERNAME }}/signalling:release_latest
  SLAVEMANAGER_IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/slavemanager:release_latest
  CONDUCTOR_IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/conductor:release_latest
  AUTHENTICATOR_IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/authenticator:release_latest
  

jobs:      
  build-signalling:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Signalling
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: Host  
        target: release
        file: Host/Signalling/Dockerfile
        push: true
        tags: ${{ env.SIGNALLING_IMAGE_NAME }}

  build-slavemanager:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: SlaveManager
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: Host  
        target: release
        file: Host/SlaveManager/Dockerfile
        push: true
        tags: ${{ env.SLAVEMANAGER_IMAGE_NAME }}

  build-conductor:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Conductor
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: Host 
        target: release
        file: Host/Conductor/Dockerfile
        push: true
        tags: ${{ env.CONDUCTOR_IMAGE_NAME }}


  build-authenticator:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Authenticator 
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: Host 
        file: Host/Authenticator/Dockerfile
        push: true
        tags: ${{ env.AUTHENTICATOR_IMAGE_NAME }}


  authenticator-deployment:
    name: Auth-server-deploy
    runs-on: ubuntu-latest
    needs: build-authenticator

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Create SSH key
      run: |
        mkdir -p ~/.ssh/
        echo "$SSH_PRIVATE_KEY" > ../private.key
        sudo chmod 600 ../private.key
        echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
      shell: bash
      env:
        SSH_KNOWN_HOSTS: authenticator.thinkmay.net
        SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
        SSH_KEY_PATH: ${{ github.workspace }}/../private.key

    - name: Deploy
      run: |
        ssh -i $SSH_KEY_PATH root@thinkmay.net
        sudo -i 
        docker stop "$AUTHENTICATOR_IMAGE_NAME"
        docker rm   "$AUTHENTICATOR_IMAGE_NAME"
        docker rmi  "$AUTHENTICATOR_IMAGE_NAME"
        docker pull "$AUTHENTICATOR_IMAGE_NAME"
        docker run  "$AUTHENTICATOR_IMAGE_NAME"
      shell: bash
      env:
        AUTHENTICATOR_IMAGE_NAME: ${{ env.AUTHENTICATOR_IMAGE_NAME }}




  kubernetes-deployment:
    name: Kubernetes-server-deploy
    runs-on: ubuntu-latest
    needs: [build-conductor, build-slavemanager, build-signalling] 

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Create SSH key
      run: |
        mkdir -p ~/.ssh/
        echo "$SSH_PRIVATE_KEY" > ../private.key
        sudo chmod 600 ../private.key
        echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
      shell: bash
      env:
        SSH_KNOWN_HOSTS: thinkmay.net
        SSH_PRIVATE_KEY: ${{secrets.AWS_KEY}}
        SSH_KEY_PATH: ${{ github.workspace }}/../private.key


    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |
        ssh -i "$SSH_KEY_PATH" ubuntu@thinkmay.net
        sudo -i
        kubectl rollout restart deploy conductor 
        kubectl rollout restart deploy signalling 
        kubectl rollout restart deploy slavemanager 
      shell: bash
      env:
        SSH_KEY_PATH: ${{ github.workspace }}/../private.key
        








