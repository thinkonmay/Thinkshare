name: CLIENT

on:
  push:
    branches: [ master ]
    paths: 
    - 'Client/website/**'
  pull_request:
    branches: [ master ]
    paths: 
    - 'Client/website/**'
  workflow_dispatch:

#setup environment variable
env:
  REGISTRY: ghcr.io
  SERVICE_PAGE_IMAGE:  ${{ secrets.DOCKER_USERNAME }}/service-page:latest
  LANDING_PAGE_IMAGE:  ${{ secrets.DOCKER_USERNAME }}/landing-page:latest
  ADMIN_PAGE_IMAGE:  ${{ secrets.DOCKER_USERNAME }}/admin-page:latest

  GKE_CLUSTER: thinkmay-cluster-v1  # TODO: update to cluster name
  GKE_ZONE: asia-southeast1-a   # TODO: update to cluster zone
jobs:
  client:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: ServicePage 
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: Client/website/service-page 
        push: true
        tags: ${{ env.SERVICE_PAGE_IMAGE }}

    - name: LandingPage 
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: Client/website/landing-page
        push: true
        tags: ${{ env.LANDING_PAGE_IMAGE }}
        
    - name: AdminPage 
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: Client/website/admin-page
        push: true
        tags: ${{ env.ADMIN_PAGE_IMAGE }}

      

  deployment:
    name: Deploy
    runs-on: ubuntu-latest
    needs: client 

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@v0.2.1
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |
        kubectl rollout restart deploy service-page 
        kubectl rollout restart deploy landing-page
        kubectl get services -o wide






